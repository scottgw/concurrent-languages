/*
 * product: matrix-vector product
 *
 * input:
 *   nelts: the number of elements
 *   matrix: a real matrix
 *   vector: a real vector
 *
 * output:
 *   result: a real vector, whose values are the result of the product
 */

#include <cilk-lib.cilkh>
#include <stdio.h>
#include <stdlib.h>

#include "common.cilkh"

cilk void product_split(int index, SplitState state) {
  double sum = 0;
  int j;
  for (j = 0; j < state.nelts; j++) {
    sum += state.matrix_double[index][j] * state.vector[j];
  }
  state.result[index] = sum;
}

cilk void product(int nelts, double** matrix, double* vector,
    double* result) {
  SplitState state = {.nelts = nelts, .matrix_double = matrix,
    .vector = vector, .result = result};
  spawn split(0, nelts, product_split, state);
}
